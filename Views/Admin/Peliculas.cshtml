<!DOCTYPE html>
<html lang="es">

@{
    Layout = null;
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Panel de Administración - Películas</title>
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/css/peliculas.css">
</head>

<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="logo">
            <h3 class="mb-0">Panel <span class="text-primary">Admin</span></h3>
            <small class="text-muted">Sistema de gestión</small>
        </div>
        
        <nav class="nav flex-column">
            <a class="nav-link" href="/Admin/Index">
                <i class="bi bi-house-door me-2"></i> Inicio
            </a>
            <a class="nav-link" href="/Admin/ListarUsuarios">
                <i class="bi bi-people me-2"></i> Usuarios
            </a>
            <a class="nav-link active" href="/Admin/Peliculas">
                <i class="bi bi-film me-2"></i> Películas
            </a>
            <a class="nav-link" href="/Admin/Sistema">
                <i class="bi bi-gear me-2"></i> Sistema
            </a>
            <a class="nav-link" href="/Admin/Perfil">
                <i class="bi bi-person me-2"></i> Perfil
            </a>
            <a class="nav-link text-danger" href="#">
                <i class="bi bi-box-arrow-right me-2"></i> Cerrar Sesión
            </a>
        </nav>
        
        <div class="user-info">
            <p class="mb-1">Administrador</p>
            <p class="mb-0">Último acceso: Hoy</p>
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <!-- Lista de películas -->
        <div class="movies-list fade-in">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h3 class="mb-0">Películas Existentes</h3>
                <div>
                    <button type="button" class="btn btn-primary me-2" data-bs-toggle="modal" data-bs-target="#uploadModal">
                        <i class="bi bi-plus-circle me-1"></i> Agregar Película
                    </button>
                    <button type="button" class="btn btn-outline-primary" onclick="cargarPeliculas()">
                        <i class="bi bi-arrow-clockwise me-1"></i> Actualizar Lista
                    </button>
                </div>
            </div>
        
            <!-- Tabla horizontal para mostrar películas -->
            <div class="table-responsive">
                <table class="table table-dark table-hover table-striped" id="tablaPeliculas">
                    <thead class="table-header-custom">
                        <tr>
                            <th width="50">ID</th>
                            <th width="80">Imagen</th>
                            <th width="150">Nombre</th>
                            <th width="200">Descripción</th>
                            <th width="120">Género</th>
                            <th width="100">Duración</th>
                            <th width="120">Fecha</th>
                            <th width="100">Película</th>
                            <th width="100">Trailer</th>
                            <th width="120">Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="peliculasList">
                        <!-- Las películas se cargarán aquí -->
                        <tr>
                            <td colspan="10" class="text-center py-4">
                                <p class="text-muted mb-0">Cargando películas...</p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Modal para subir película -->
    <div class="modal fade" id="uploadModal" tabindex="-1" aria-labelledby="uploadModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="uploadModalLabel">
                        <i class="bi bi-cloud-upload me-2"></i>Subir Nueva Película
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="uploadForm" enctype="multipart/form-data" class="needs-validation" novalidate>
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="form-section">
                                    <h4 class="form-section-title">Información Básica</h4>
                                    
                                    <div class="mb-3">
                                        <label for="Nombre_Peli" class="form-label">Nombre de la Película *</label>
                                        <input type="text" class="form-control" id="Nombre_Peli" name="Nombre_Peli" required>
                                        <div class="invalid-feedback">
                                            Por favor ingresa el nombre de la película.
                                        </div>
                                    </div>

                                    <div class="mb-3">
                                        <label for="Descripción" class="form-label">Descripción *</label>
                                        <textarea class="form-control" id="Descripción" name="Descripción" rows="3" required></textarea>
                                        <div class="invalid-feedback">
                                            Por favor ingresa una descripción.
                                        </div>
                                    </div>

                                    <div class="mb-3">
                                        <label for="Genero" class="form-label">Género *</label>
                                        <input type="text" class="form-control" id="Genero" name="Genero" required>
                                        <div class="invalid-feedback">
                                            Por favor ingresa el género.
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label for="Tiempo_Duracion" class="form-label">Duración (HH:MM:SS) *</label>
                                                <input type="text" class="form-control" id="Tiempo_Duracion" name="Tiempo_Duracion" 
                                                       placeholder="01:30:00" pattern="\d{2}:\d{2}:\d{2}" required>
                                                <div class="invalid-feedback">
                                                    Formato: HH:MM:SS (ej: 01:30:00)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="mb-3">
                                                <label for="Fecha_Publicada" class="form-label">Fecha de Publicación *</label>
                                                <input type="date" class="form-control" id="Fecha_Publicada" name="Fecha_Publicada" required>
                                                <div class="invalid-feedback">
                                                    Por favor selecciona una fecha.
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-6">
                                <div class="form-section">
                                    <h4 class="form-section-title">Archivos Multimedia</h4>
                                    
                                    <div class="mb-3 file-input-container">
                                        <label for="ImagenFile" class="form-label">Imagen de la Película *</label>
                                        <label for="ImagenFile" class="file-input-label" id="ImagenFileLabel">
                                            <i class="bi bi-image me-2"></i> Seleccionar imagen
                                        </label>
                                        <input type="file" class="file-input" id="ImagenFile" name="ImagenFile" 
                                               accept="image/*" required>
                                        <div class="form-text">Formatos: JPG, PNG, GIF, WEBP (Máx: 10MB)</div>
                                        <div class="invalid-feedback">
                                            Por favor selecciona una imagen.
                                        </div>
                                    </div>

                                    <div class="mb-3 file-input-container">
                                        <label for="TrailerFile" class="form-label">Trailer *</label>
                                        <label for="TrailerFile" class="file-input-label" id="TrailerFileLabel">
                                            <i class="bi bi-play-btn me-2"></i> Seleccionar trailer
                                        </label>
                                        <input type="file" class="file-input" id="TrailerFile" name="TrailerFile" 
                                               accept="video/*" required>
                                        <div class="form-text">Formatos: MP4, MOV, AVI, etc. (Máx: 50MB)</div>
                                        <div class="invalid-feedback">
                                            Por favor selecciona el trailer.
                                        </div>
                                    </div>

                                    <div class="mb-3 file-input-container">
                                        <label for="PeliculaFile" class="form-label">Película Completa *</label>
                                        <label for="PeliculaFile" class="file-input-label" id="PeliculaFileLabel">
                                            <i class="bi bi-film me-2"></i> Seleccionar película
                                        </label>
                                        <input type="file" class="file-input" id="PeliculaFile" name="PeliculaFile" 
                                               accept="video/*" required>
                                        <div class="form-text">Formatos: MP4, MOV, AVI, etc. (Máx: 500MB)</div>
                                        <div class="invalid-feedback">
                                            Por favor selecciona la película completa.
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Mensajes de resultado -->
                        <div id="successAlert" class="alert alert-success alert-custom d-none mt-3" role="alert"></div>
                        <div id="errorAlert" class="alert alert-danger alert-custom d-none mt-3" role="alert"></div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" onclick="limpiarFormulario()" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary btn-submit" id="submitBtn" form="uploadForm">
                        <span id="submitText">Subir Película</span>
                        <div id="submitSpinner" class="spinner-border spinner-border-sm d-none" role="status">
                            <span class="visually-hidden">Cargando...</span>
                        </div>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Función para mostrar películas en la tabla (FUNCIÓN FALTANTE AGREGADA)
        function mostrarPeliculas(peliculas) {
            const container = document.getElementById('peliculasList');
            
            if (!peliculas || peliculas.length === 0) {
                container.innerHTML = `
                    <tr>
                        <td colspan="10" class="text-center py-4">
                            <p class="text-muted mb-0">No hay películas registradas. Haz clic en "Agregar Película" para comenzar.</p>
                        </td>
                    </tr>
                `;
                return;
            }

            container.innerHTML = peliculas.map(pelicula => `
                <tr>
                    <td class="fw-bold">${pelicula.id}</td>
                    <td>
                        <img src="${pelicula.imagen_Peli}" 
                             alt="${pelicula.nombre_Peli}" 
                             class="img-thumbnail" 
                             style="width: 60px; height: 80px; object-fit: cover; cursor: pointer;"
                             onclick="ampliarImagen('${pelicula.imagen_Peli}')">
                    </td>
                    <td class="fw-semibold">${pelicula.nombre_Peli}</td>
                    <td class="small">${pelicula.descripción || 'Sin descripción'}</td>
                    <td><span class="badge bg-info">${pelicula.genero}</span></td>
                    <td>${pelicula.tiempo_Duracion}</td>
                    <td>${new Date(pelicula.fecha_Publicada).toLocaleDateString()}</td>
                    <td>
                        <button class="btn btn-sm btn-outline-primary" onclick="verPelicula(${pelicula.id})">
                            <i class="bi bi-play-fill"></i> Ver
                        </button>
                    </td>
                    <td>
                        <button class="btn btn-sm btn-outline-warning" onclick="verTrailer(${pelicula.id})">
                            <i class="bi bi-play-btn"></i> Trailer
                        </button>
                    </td>
                    <td>
                        <div class="btn-group">
                            <button class="btn btn-sm btn-outline-info" onclick="verPelicula(${pelicula.id})" 
                                    data-bs-toggle="tooltip" title="Ver detalles">
                                <i class="bi bi-eye"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-danger" onclick="eliminarPelicula(${pelicula.id})" 
                                    data-bs-toggle="tooltip" title="Eliminar">
                                <i class="bi bi-trash"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            `).join('');

            // Inicializar tooltips
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            const tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        }

        // Función para ver trailer (FUNCIÓN FALTANTE AGREGADA)
        async function verTrailer(id) {
            try {
                const response = await fetch(`/api/peliculas/${id}`);
                if (response.ok) {
                    const pelicula = await response.json();
                    if (pelicula.video_Trailer) {
                        window.open(pelicula.video_Trailer, '_blank');
                    } else {
                        mostrarError('No hay trailer disponible');
                    }
                }
            } catch (error) {
                console.error('Error:', error);
                mostrarError('Error al cargar el trailer');
            }
        }

        // Manejar envío del formulario
        document.getElementById('uploadForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            if (!this.checkValidity()) {
                e.stopPropagation();
                this.classList.add('was-validated');
                return;
            }

            // Mostrar spinner y deshabilitar botón
            const submitBtn = document.getElementById('submitBtn');
            const submitText = document.getElementById('submitText');
            const submitSpinner = document.getElementById('submitSpinner');
            
            submitBtn.disabled = true;
            submitText.textContent = 'Subiendo...';
            submitSpinner.classList.remove('d-none');

            // Ocultar alertas anteriores
            document.getElementById('successAlert').classList.add('d-none');
            document.getElementById('errorAlert').classList.add('d-none');

            const formData = new FormData();
            formData.append('Nombre_Peli', document.getElementById('Nombre_Peli').value);
            formData.append('Descripción', document.getElementById('Descripción').value);
            formData.append('Genero', document.getElementById('Genero').value);
            formData.append('Tiempo_Duracion', document.getElementById('Tiempo_Duracion').value);
            formData.append('Fecha_Publicada', document.getElementById('Fecha_Publicada').value);
            formData.append('ImagenFile', document.getElementById('ImagenFile').files[0]);
            formData.append('TrailerFile', document.getElementById('TrailerFile').files[0]);
            formData.append('PeliculaFile', document.getElementById('PeliculaFile').files[0]);

            try {
                const response = await fetch('/api/peliculas/crear-pelicula', {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    const result = await response.json();
                    mostrarExito('Película subida exitosamente! ID: ' + result.id);
                    limpiarFormulario();
                    
                    // Cerrar el modal después de un éxito
                    setTimeout(() => {
                        const modal = bootstrap.Modal.getInstance(document.getElementById('uploadModal'));
                        modal.hide();
                    }, 1500);
                    
                    cargarPeliculas(); // Recargar la lista
                } else {
                    const error = await response.text();
                    mostrarError('Error: ' + error);
                }
            } catch (error) {
                console.error('Error:', error);
                mostrarError('Error de conexión: ' + error.message);
            } finally {
                // Restaurar botón
                submitBtn.disabled = false;
                submitText.textContent = 'Subir Película';
                submitSpinner.classList.add('d-none');
            }
        });

        // Función para mostrar éxito
        function mostrarExito(mensaje) {
            const alert = document.getElementById('successAlert');
            alert.textContent = mensaje;
            alert.classList.remove('d-none');
            
            // Ocultar alerta después de 5 segundos
            setTimeout(() => {
                alert.classList.add('d-none');
            }, 5000);
        }

        // Función para mostrar error
        function mostrarError(mensaje) {
            const alert = document.getElementById('errorAlert');
            alert.textContent = mensaje;
            alert.classList.remove('d-none');
        }

        // Función para limpiar el formulario
        function limpiarFormulario() {
            document.getElementById('uploadForm').reset();
            document.getElementById('uploadForm').classList.remove('was-validated');
            document.getElementById('successAlert').classList.add('d-none');
            document.getElementById('errorAlert').classList.add('d-none');
            
            // Restablecer las etiquetas de los archivos
            document.getElementById('ImagenFileLabel').innerHTML = '<i class="bi bi-image me-2"></i> Seleccionar imagen';
            document.getElementById('ImagenFileLabel').classList.remove('has-file');
            document.getElementById('TrailerFileLabel').innerHTML = '<i class="bi bi-play-btn me-2"></i> Seleccionar trailer';
            document.getElementById('TrailerFileLabel').classList.remove('has-file');
            document.getElementById('PeliculaFileLabel').innerHTML = '<i class="bi bi-film me-2"></i> Seleccionar película';
            document.getElementById('PeliculaFileLabel').classList.remove('has-file');
        }

        // Función para cargar y mostrar películas
        async function cargarPeliculas() {
            try {
                const response = await fetch('/api/peliculas/todas-peliculas');
                if (response.ok) {
                    const peliculas = await response.json();
                    mostrarPeliculas(peliculas);
                } else {
                    mostrarError('Error al cargar las películas');
                }
            } catch (error) {
                console.error('Error:', error);
                mostrarError('Error de conexión al cargar películas');
            }
        }

        // Función para ampliar imagen
        function ampliarImagen(src) {
            const modalHtml = `
                <div class="modal fade" id="imageModal" tabindex="-1">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Vista previa de imagen</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body text-center">
                                <img src="${src}" class="img-fluid" alt="Imagen ampliada">
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            document.body.insertAdjacentHTML('beforeend', modalHtml);
            const imageModal = new bootstrap.Modal(document.getElementById('imageModal'));
            imageModal.show();
            
            // Remover el modal cuando se cierre
            document.getElementById('imageModal').addEventListener('hidden.bs.modal', function () {
                this.remove();
            });
        }

        // Función para ver detalles de una película
        async function verPelicula(id) {
            try {
                const response = await fetch(`/api/peliculas/${id}`);
                if (response.ok) {
                    const pelicula = await response.json();
                    const modalHtml = `
                        <div class="modal fade" id="detailModal" tabindex="-1">
                            <div class="modal-dialog modal-lg">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title">Detalles de: ${pelicula.nombre_Peli}</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-md-4">
                                                <img src="${pelicula.imagen_Peli}" class="img-fluid rounded" alt="${pelicula.nombre_Peli}">
                                            </div>
                                            <div class="col-md-8">
                                                <p><strong>Descripción:</strong> ${pelicula.descripción}</p>
                                                <p><strong>Género:</strong> ${pelicula.genero}</p>
                                                <p><strong>Duración:</strong> ${pelicula.tiempo_Duracion}</p>
                                                <p><strong>Fecha de publicación:</strong> ${new Date(pelicula.fecha_Publicada).toLocaleDateString()}</p>
                                                <div class="mt-3">
                                                    <a href="${pelicula.enlace_Peli}" target="_blank" class="btn btn-primary me-2">
                                                        <i class="bi bi-play-fill me-1"></i> Ver Película
                                                    </a>
                                                    <a href="${pelicula.video_Trailer}" target="_blank" class="btn btn-outline-warning">
                                                        <i class="bi bi-play-btn me-1"></i> Ver Trailer
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
                    
                    document.body.insertAdjacentHTML('beforeend', modalHtml);
                    const detailModal = new bootstrap.Modal(document.getElementById('detailModal'));
                    detailModal.show();
                    
                    // Remover el modal cuando se cierre
                    document.getElementById('detailModal').addEventListener('hidden.bs.modal', function () {
                        this.remove();
                    });
                } else {
                    mostrarError('Error al cargar los detalles');
                }
            } catch (error) {
                console.error('Error:', error);
                mostrarError('Error de conexión');
            }
        }

        // Función para eliminar una película
        async function eliminarPelicula(id) {
            if (!confirm('¿Estás seguro de que quieres eliminar esta película?')) {
                return;
            }

            try {
                const response = await fetch(`/api/peliculas/eliminar/${id}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    mostrarExito('Película eliminada exitosamente');
                    cargarPeliculas(); // Recargar lista
                } else {
                    const error = await response.text();
                    mostrarError('Error al eliminar: ' + error);
                }
            } catch (error) {
                console.error('Error:', error);
                mostrarError('Error de conexión al eliminar');
            }
        }

        // Cargar películas al cargar la página
        document.addEventListener('DOMContentLoaded', function() {
            cargarPeliculas();
            
            // Establecer fecha actual por defecto
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('Fecha_Publicada').value = today;
            
            // Mejorar la experiencia de los inputs de archivo
            const fileInputs = document.querySelectorAll('.file-input');
            fileInputs.forEach(input => {
                input.addEventListener('change', function() {
                    const label = document.getElementById(this.id + 'Label');
                    if (this.files.length > 0) {
                        label.innerHTML = `<i class="bi bi-check-circle-fill text-success me-2"></i> ${this.files[0].name}`;
                        label.classList.add('has-file');
                    } else {
                        const iconClass = this.id === 'ImagenFile' ? 'image' : this.id === 'TrailerFile' ? 'play-btn' : 'film';
                        const text = this.id === 'ImagenFile' ? 'imagen' : this.id === 'TrailerFile' ? 'trailer' : 'película';
                        label.innerHTML = `<i class="bi bi-${iconClass} me-2"></i> Seleccionar ${text}`;
                        label.classList.remove('has-file');
                    }
                });
            });
            
            // Limpiar formulario cuando se cierra el modal
            const uploadModal = document.getElementById('uploadModal');
            uploadModal.addEventListener('hidden.bs.modal', function () {
                limpiarFormulario();
            });
        });
    </script>
</body>
</html>